# 別名 checkExistInFile: 用來確認設定檔，是否已經修改過
# checkExistInFile [欄位定位]...<最終目標>
# 檢視的格式包含 json、.zshrc

# 唯一選項:
# checkExistInFile <選項>
# 若參數唯一時，做唯一選項檢查
# 先驗證唯一性，若不符合報錯
# 若符合，就返回「設定已經修改過了」

local args=($*)
local file=$args[$#*]
# args[$#*]=()
local fields=($args)

# 檢查參數數量
(($#args < 2)) && echo "Error: 至少兩個關鍵字 <關鍵字> <檔案> " >&2 && return 1
[[ ! -f $file ]] && echo "Error: 檔案不存在" >&2 && return 1
# 唯一選項檢查
if (($#args == 2)); then
  # 檢查是否已修改過
  ! (grep -q "$fields" "$file") && echo 1 && return 0
  echo 0
  return 0
fi

# checkExistInFile [欄位定位]...<最終目標>
# 先查詢主要欄位，來定位，需取得行數、縮排、該欄位是縱向展開、還是橫向展開、欄位使用的括弧

# 確認欄位名稱:
# 檢驗需包含 "" 整體符合
# 並回傳該行數

# 確認括號:
# 先檢查欄位頭一個字元的縮排，是否下一行有同樣欄位
# 若有可以測試是否有 [] 或 無括號
# 若無括號，應是單一屬性，直接檢查修改
# 若是有 [] 則檢驗是否存在目標值，若不存在目標值，則在 [] 末端添加

# 若欄位頭一個字元的縮排，在第二行不存在相同欄位，可以往下找該欄位的末端行數
# 並確認當前括號是 [] or {} 往下可以再次確認

# 可以在起訖行數之間，找尋次要欄位，若找不到代表需要插入，若找得到則依照上面規則，縮小查詢範圍







# 最後要確認

# 最終檢查:
# 下面的要能檢查的出來
# /.[tj]sx?$/,
# /.vue$/,
# /.vue?vue/,
# /.md$/,
